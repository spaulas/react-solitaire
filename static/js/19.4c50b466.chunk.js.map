{"version":3,"sources":["react/Components/PageTitle/PageTitle.component.tsx","react/Components/Graphs/BarGraph/BarGraph.component.tsx","react/Components/Graphs/BarGraph/MovesGraph.component.tsx","react/Components/Graphs/PieGraph/PieGraph.component.tsx","react/Components/Graphs/BarGraph/TimeGraph.component.tsx","react/Components/Graphs/CarouselDisplay/CarouselDisplay.component.tsx","react/Components/Graphs/DashboardDisplay/DashboardDisplay.component.tsx","react/Pages/StatisticsPage/JoyrideSteps.component.tsx","react/Pages/StatisticsPage/StatisticsPage.component.tsx"],"names":["PageTitle","title","history","useHistory","className","onClick","push","src","require","alt","BarGraph","width","height","data","dataKey","label","length","barCategoryGap","cursor","fill","labelFormatter","bar","image","Empty","PRESENTED_IMAGE_SIMPLE","MovesGraph","useSelector","graphs","User","user","moves","COLORS","RADIAN","Math","PI","memo","iconSize","winsRatio","cx","cy","labelLine","midAngle","innerRadius","outerRadius","percent","radius","x","cos","y","sin","textAnchor","dominantBaseline","toFixed","map","entry","index","key","contentStyle","border","background","fontSize","fontWeight","borderRadius","iconType","TimeGraph","time","forwardRef","props","ref","useState","countKey","setCountKey","isMobile","setIsMobile","useEffect","window","innerWidth","LeftOutlined","current","innerSlider","slickPrev","id","RightOutlined","slickNext","DashboardDisplay","xs","sm","md","JoyrideSteps","content","disableBeacon","spotlightClicks","target","placement","carouselRef","useRef","dispatch","useDispatch","carouselDisplay","setCarouselDisplay","handleCarousel","action","joyrideActions","initJoyride","AppstoreFilled","BorderOutlined"],"mappings":"2HAAA,4BAwBeA,IAhBf,YAA+C,IAA1BC,EAAyB,EAAzBA,MACbC,EAAUC,cAChB,OACE,yBAAKC,UAAU,sBACb,0BAAMA,UAAU,iBAAiBH,GACjC,yBACEI,QAAS,kBAAMH,EAAQI,KAAK,MAC5BF,UAAU,YACVG,IAAKC,EAAQ,KACbC,IAAI,Q,2IC6BGC,MAjCf,YAOmB,IANjBC,EAMgB,EANhBA,MACAC,EAKgB,EALhBA,OACAC,EAIgB,EAJhBA,KACAC,EAGgB,EAHhBA,QACAC,EAEgB,EAFhBA,MAEgB,IADhBX,iBACgB,MADJ,GACI,EAChB,OAAW,OAAJS,QAAI,IAAJA,OAAA,EAAAA,EAAMG,QAAS,EACpB,kBAAC,IAAD,CACEL,MAAOA,EACPC,OAAQA,EACRC,KAAMA,EACNI,eAAgB,EAChBb,UAAS,6BAAwBA,IAEjC,kBAAC,IAAD,CAAOU,QAAQ,SACf,kBAAC,IAAD,MACA,kBAAC,IAAD,CACEI,OAAQ,CACNC,KAAM,mBAERC,eAAgB,SAACC,GAAD,OACd,wCAAUN,EAAMM,GAAhB,YAAwBN,EAAMM,GAAO,EAAI,QAAU,YAGvD,kBAAC,IAAD,CAAKP,QAASA,EAASK,KAAK,8BAG9B,kBAAC,IAAD,CAAOG,MAAOC,IAAMC,0B,QCVTC,MArBf,YAAoE,IAA9Cd,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,OAAQR,EAA8B,EAA9BA,UAA8B,EAK7DsB,aAAY,kBAAiC,CAC/CC,OADc,EAAGC,KACJC,KAAKF,WAJlBA,OACEG,MAASjB,EAHoD,EAGpDA,KAAME,EAH8C,EAG9CA,MAMnB,OACE,kBAAC,EAAD,CACEX,UAAWA,EACXS,KAAMA,EACNC,QAAQ,QACRC,MAAOA,EACPJ,MAAOA,EACPC,OAAQA,KCZRmB,EAAS,CAAC,qBAAsB,4BAChCC,EAASC,KAAKC,GAAK,IAqEVC,sBAnEf,YAA+E,IAA3DxB,EAA0D,EAA1DA,MAAOC,EAAmD,EAAnDA,OAAQwB,EAA2C,EAA3CA,SAA2C,IAAjChC,iBAAiC,MAArB,GAAqB,EAEhEiC,EACRX,aAAY,kBAAiC,CAC/CC,OADc,EAAGC,KACJC,KAAKF,WAFlBA,OAAUU,UA8BZ,OAAOA,EAAUrB,OAAS,EACxB,kBAAC,IAAD,CACEL,MAAOA,EACPC,OAAQA,EACRR,UAAS,6BAAwBA,IAEjC,kBAAC,IAAD,CACES,KAAMwB,EACNC,GAAI3B,EAAQ,EACZ4B,GAAI5B,EAAQ,EACZ6B,WAAW,EACXzB,MApCwB,SAAC,GAOX,IANlBuB,EAMiB,EANjBA,GACAC,EAKiB,EALjBA,GACAE,EAIiB,EAJjBA,SACAC,EAGiB,EAHjBA,YACAC,EAEiB,EAFjBA,YACAC,EACiB,EADjBA,QAEMC,EAASH,EAA4C,IAA7BC,EAAcD,GACtCI,EAAIR,EAAKO,EAASZ,KAAKc,KAAKN,EAAWT,GACvCgB,EAAIT,EAAKM,EAASZ,KAAKgB,KAAKR,EAAWT,GAE7C,OACE,0BACEc,EAAGA,EACHE,EAAGA,EACH7B,KAAK,QACL+B,WAAYJ,EAAIR,EAAK,QAAU,MAC/Ba,iBAAiB,WALnB,WAOiB,IAAVP,GAAeQ,QAAQ,GAP9B,OAwBET,YAAa/B,EAAS,EACtBE,QAAQ,SAEPuB,EAAUgB,KAAI,SAACC,EAAoBC,GAArB,OACb,kBAAC,IAAD,CAAMC,IAAG,eAAUD,GAASpC,KAAMY,EAAOwB,EAAQxB,EAAOf,cAG5D,kBAAC,IAAD,CACEyC,aAAc,CACZC,OAAQ,OACRC,WAAY,QACZC,SAAU,OACVC,WAAY,OACZC,aAAc,UAGlB,kBAAC,IAAD,CAAQ1B,SAAUA,EAAU2B,SAAS,YAGvC,kBAAC,IAAD,CAAOzC,MAAOC,IAAMC,uBAAwBpB,UAAU,qBCjD3C4D,MArBf,YAAmE,IAA9CrD,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,OAAQR,EAA8B,EAA9BA,UAA8B,EAK5DsB,aAAY,kBAAiC,CAC/CC,OADc,EAAGC,KACJC,KAAKF,WAJlBA,OACEsC,KAAQpD,EAHoD,EAGpDA,KAAME,EAH8C,EAG9CA,MAMlB,OACE,kBAAC,EAAD,CACEF,KAAMA,EACNC,QAAQ,UACRC,MAAOA,EACPJ,MAAOA,EACPC,OAAQA,EACRR,UAAWA,KCqDF8D,4BAvEf,SAAyBC,EAAoBC,GAAmB,IAAD,EAC7BC,mBAAS,GADoB,mBACtDC,EADsD,KAC5CC,EAD4C,OAE7BF,oBAAS,GAFoB,mBAEtDG,EAFsD,KAE5CC,EAF4C,KAwB7D,OAFAC,qBARoB,YACbF,GAAYG,OAAOC,WAAa,KACnCH,GAAY,GAEVD,GAAYG,OAAOC,YAAc,KACnCH,GAAY,KAGO,IAGrB,yBAAKrE,UAAS,UAAK+D,EAAM/D,UAAX,iCACZ,kBAACyE,EAAA,EAAD,CACEzE,UAAU,kCACVC,QAnBW,WAAO,IAAD,IAClB,OAAH+D,QAAG,IAAHA,GAAA,UAAAA,EAAKU,eAAL,mBAAcC,mBAAd,SAA2BC,YAC3BT,EAAYD,EAAW,MAmBrB,kBAAC,IAAD,CAAUF,IAAKA,EAAKhE,UAAU,sBAC5B,6BACE,yBAAKA,UAAU,YACb,kBAAC,IAAD,CAAkB6E,GAAG,yBAEvB,kBAAC,EAAD,CACEzB,IAAKc,EACL3D,MAAO6D,EAAW,IAAM,IACxB5D,OAAQ4D,EAAW,IAAM,IACzBpC,SAAUoC,EAAW,GAAK,MAG9B,6BACE,yBAAKpE,UAAU,YACb,kBAAC,IAAD,CAAkB6E,GAAG,6BAEvB,kBAAC,EAAD,CACEzB,IAAKc,EAAW,EAChB3D,MAAO6D,EAAW,IAAM,IACxB5D,OAAQ4D,EAAW,IAAM,OAG7B,6BACE,yBAAKpE,UAAU,YACb,kBAAC,IAAD,CAAkB6E,GAAG,4BAEvB,kBAAC,EAAD,CACEzB,IAAKc,EAAW,EAChB3D,MAAO6D,EAAW,IAAM,IACxB5D,OAAQ4D,EAAW,IAAM,QAI/B,kBAACU,EAAA,EAAD,CACE9E,UAAU,mCACVC,QA7DO,WAAO,IAAD,IACd,OAAH+D,QAAG,IAAHA,GAAA,UAAAA,EAAKU,eAAL,mBAAcC,mBAAd,SAA2BI,YAC3BZ,EAAYD,EAAW,U,kBC4CZc,MApDf,WAA6B,IAAD,EACMf,oBAAS,GADf,mBACnBG,EADmB,KACTC,EADS,KAa1B,OAFAC,qBARoB,YACbF,GAAYG,OAAOC,WAAa,KACnCH,GAAY,GAEVD,GAAYG,OAAOC,YAAc,KACnCH,GAAY,KAGO,IAGrB,yBAAKrE,UAAU,gCACb,kBAAC,IAAD,KACE,yBAAKA,UAAU,cACb,kBAAC,IAAD,CAAkB6E,GAAG,yBAEvB,kBAAC,EAAD,CACEtE,MAAO6D,EAAW,IAAM,IACxB5D,OAAQ4D,EAAW,IAAM,IACzBpC,SAAUoC,EAAW,GAAK,GAC1BpE,UAAU,uBAGd,kBAAC,IAAD,CAAKA,UAAU,aACb,kBAAC,IAAD,CAAKiF,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvB,yBAAKnF,UAAU,cACb,kBAAC,IAAD,CAAkB6E,GAAG,6BAEvB,kBAAC,EAAD,CACEtE,MAAO6D,EAAW,IAAM,IACxB5D,OAAQ4D,EAAW,IAAM,IACzBpE,UAAU,uBAGd,kBAAC,IAAD,CAAKiF,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAInF,UAAU,aACrC,yBAAKA,UAAU,cACb,kBAAC,IAAD,CAAkB6E,GAAG,4BAEvB,kBAAC,EAAD,CACEtE,MAAO6D,EAAW,IAAM,IACxB5D,OAAQ4D,EAAW,IAAM,IACzBpE,UAAU,0BCQPoF,MAvDf,WACE,MAAO,CACL,CACEC,QACE,4BACE,kBAAC,IAAD,CAAkBR,GAAG,+BAGzBS,eAAe,EACfC,iBAAiB,EACjBC,OAAQ,yBACRC,UAAW,UAEb,CACEJ,QACE,4BACE,kBAAC,IAAD,CAAkBR,GAAG,+BAGzBS,eAAe,EACfE,OAAQ,6BACRC,UAAW,cAEb,CACEJ,QACE,4BACE,kBAAC,IAAD,CAAkBR,GAAG,+BAGzBS,eAAe,EACfE,OAAQ,6BACRC,UAAW,cAEb,CACEJ,QACE,4BACE,kBAAC,IAAD,CAAkBR,GAAG,+BAGzBS,eAAe,EACfE,OAAQ,6BACRC,UAAW,cAEb,CACEJ,QACE,4BACE,kBAAC,IAAD,CAAkBR,GAAG,+BAGzBS,eAAe,EACfE,OAAQ,8B,kBCKCzD,0BAhDf,WACE,IAAM2D,EAA2BC,mBAE3BC,EAAWC,cAHO,EAIsB5B,oBAAkB,GAJxC,mBAIjB6B,EAJiB,KAIAC,EAJA,KAMlBC,EAAiB,SAACC,EAAgB9C,GACc,IAAD,IAAnD,GAAe,SAAX8C,GAAqB9C,GAAS,GAAKA,GAAS,EACnC,OAAXuC,QAAW,IAAXA,GAAA,UAAAA,EAAahB,eAAb,mBAAsBC,mBAAtB,SAAmCI,iBAC9B,GAAe,SAAXkB,GAAqB9C,GAAS,GAAKA,GAAS,EAAG,CAAC,IAAD,IAC7C,OAAXuC,QAAW,IAAXA,GAAA,UAAAA,EAAahB,eAAb,mBAAsBC,mBAAtB,SAAmCC,cAWvC,OAFAN,qBALoB,WAClBsB,EACEM,IAAeC,YAAY,aAAcf,IAAgBY,MAGtC,IAGrB,yBAAKhG,UAAU,iDACb,kBAAC,IAAD,CAAWH,MAAO,kBAAC,IAAD,CAAkBgF,GAAG,yBACtCiB,EACC,oCACE,kBAAC,EAAD,CACE9B,IAAK0B,EACL1F,UAAU,8BAEZ,kBAACoG,EAAA,EAAD,CACEpG,UAAU,uCACVC,QAAS,kBAAM8F,GAAmB,OAItC,oCACE,kBAAC,EAAD,MACA,kBAACM,EAAA,EAAD,CACErG,UAAU,eACVC,QAAS,kBAAM8F,GAAmB","file":"static/js/19.4c50b466.chunk.js","sourcesContent":["import React, { ReactNode } from \"react\";\n// import BreadCrumb from \"../Router/BreadCrumb/BreadCrumb.component\";\nimport { useHistory } from \"react-router-dom\";\n\ninterface PageTitleProps {\n  title: ReactNode;\n}\n\nfunction PageTitle({ title }: PageTitleProps) {\n  const history = useHistory();\n  return (\n    <div className=\"pageTitleContainer\">\n      <span className=\"pageTitleSpan\">{title}</span>\n      <img\n        onClick={() => history.push(\"/\")}\n        className=\"logoTitle\"\n        src={require(\"../../../images/icon.png\")}\n        alt=\"\"\n      />\n      {/* <BreadCrumb /> */}\n    </div>\n  );\n}\n\nexport default PageTitle;\n","import { Bar, BarChart, Tooltip, XAxis, YAxis } from \"recharts\";\nimport { Empty } from \"antd\";\nimport React from \"react\";\n\ninterface BarGraphProps {\n  width: number;\n  height: number;\n  data: Array<object>;\n  dataKey: string;\n  label: Record<string, number>;\n  className?: string;\n}\n\nfunction BarGraph({\n  width,\n  height,\n  data,\n  dataKey,\n  label,\n  className = \"\"\n}: BarGraphProps) {\n  return data?.length > 0 ? (\n    <BarChart\n      width={width}\n      height={height}\n      data={data}\n      barCategoryGap={0}\n      className={`statisticsBarChart ${className}`}\n    >\n      <XAxis dataKey=\"name\" />\n      <YAxis />\n      <Tooltip\n        cursor={{\n          fill: \"rgba(0,0,0,0.2)\"\n        }}\n        labelFormatter={(bar: string | number) => (\n          <span>{`${label[bar]} ${label[bar] > 1 ? \"games\" : \"game\"}`}</span>\n        )}\n      />\n      <Bar dataKey={dataKey} fill=\"rgba(255, 255, 255, 0.1)\" />\n    </BarChart>\n  ) : (\n    <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\n  );\n}\n\nexport default BarGraph;\n","import BarGraph from \"./BarGraph.component\";\nimport React from \"react\";\nimport { RootReducerState } from \"../../../../global\";\nimport { useSelector } from \"react-redux\";\n\ninterface MovesGraphProps {\n  width: number;\n  height: number;\n  className?: string;\n}\n\nfunction MovesGraph({ width, height, className }: MovesGraphProps) {\n  const {\n    graphs: {\n      moves: { data, label }\n    }\n  } = useSelector(({ User }: RootReducerState) => ({\n    graphs: User.user.graphs\n  }));\n\n  return (\n    <BarGraph\n      className={className}\n      data={data}\n      dataKey=\"moves\"\n      label={label}\n      width={width}\n      height={height}\n    />\n  );\n}\n\nexport default MovesGraph;\n","/* eslint-disable indent */\n/* eslint-disable react/no-multi-comp */\nimport { Cell, Legend, Pie, PieChart, Tooltip } from \"recharts\";\nimport { ExplicitAny, RootReducerState } from \"../../../../global\";\nimport React, { memo } from \"react\";\nimport { Empty } from \"antd\";\nimport { useSelector } from \"react-redux\";\n\ninterface PieGraphProps {\n  width: number;\n  height: number;\n  iconSize: number;\n  className?: string;\n}\n\nconst COLORS = [\"rgba(0, 0, 0, 0.2)\", \"rgba(255, 255, 255, 0.1)\"];\nconst RADIAN = Math.PI / 180;\n\nfunction PieGraph({ width, height, iconSize, className = \"\" }: PieGraphProps) {\n  const {\n    graphs: { winsRatio }\n  } = useSelector(({ User }: RootReducerState) => ({\n    graphs: User.user.graphs\n  }));\n\n  const renderCustomizedLabel = ({\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    percent\n  }: ExplicitAny) => {\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n    return (\n      <text\n        x={x}\n        y={y}\n        fill=\"white\"\n        textAnchor={x > cx ? \"start\" : \"end\"}\n        dominantBaseline=\"central\"\n      >\n        {`${(percent * 100).toFixed(0)}%`}\n      </text>\n    );\n  };\n\n  return winsRatio.length > 0 ? (\n    <PieChart\n      width={width}\n      height={height}\n      className={`statisticsPieChart ${className}`}\n    >\n      <Pie\n        data={winsRatio}\n        cx={width / 2}\n        cy={width / 2}\n        labelLine={false}\n        label={renderCustomizedLabel}\n        outerRadius={height / 3}\n        dataKey=\"value\"\n      >\n        {winsRatio.map((entry: ExplicitAny, index: ExplicitAny) => (\n          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n        ))}\n      </Pie>\n      <Tooltip\n        contentStyle={{\n          border: \"none\",\n          background: \"white\",\n          fontSize: \"16px\",\n          fontWeight: \"bold\",\n          borderRadius: \"20px\"\n        }}\n      />\n      <Legend iconSize={iconSize} iconType=\"circle\" />\n    </PieChart>\n  ) : (\n    <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} className=\"piechartEmpty\" />\n  );\n}\n\nexport default memo(PieGraph);\n","import BarGraph from \"./BarGraph.component\";\nimport React from \"react\";\nimport { RootReducerState } from \"../../../../global\";\nimport { useSelector } from \"react-redux\";\n\ninterface TimesGraphProps {\n  width: number;\n  height: number;\n  className?: string;\n}\n\nfunction TimeGraph({ width, height, className }: TimesGraphProps) {\n  const {\n    graphs: {\n      time: { data, label }\n    }\n  } = useSelector(({ User }: RootReducerState) => ({\n    graphs: User.user.graphs\n  }));\n\n  return (\n    <BarGraph\n      data={data}\n      dataKey=\"seconds\"\n      label={label}\n      width={width}\n      height={height}\n      className={className}\n    />\n  );\n}\n\nexport default TimeGraph;\n","import { LeftOutlined, RightOutlined } from \"@ant-design/icons\";\nimport React, { forwardRef, useEffect, useState } from \"react\";\nimport { Carousel } from \"antd\";\nimport { ExplicitAny } from \"../../../../global\";\nimport { FormattedMessage } from \"react-intl\";\nimport MovesGraph from \"../BarGraph/MovesGraph.component\";\nimport Piegraph from \"../PieGraph/PieGraph.component\";\nimport TimeGraph from \"../BarGraph/TimeGraph.component\";\n\nfunction CarouselDisplay(props: ExplicitAny, ref: ExplicitAny) {\n  const [countKey, setCountKey] = useState(0);\n  const [isMobile, setIsMobile] = useState(false);\n\n  const next = () => {\n    ref?.current?.innerSlider?.slickNext();\n    setCountKey(countKey + 1);\n  };\n\n  const previous = () => {\n    ref?.current?.innerSlider?.slickPrev();\n    setCountKey(countKey + 1);\n  };\n\n  const checkMobile = () => {\n    if (!isMobile && window.innerWidth < 767) {\n      setIsMobile(true);\n    }\n    if (isMobile && window.innerWidth >= 767) {\n      setIsMobile(false);\n    }\n  };\n  useEffect(checkMobile, []);\n\n  return (\n    <div className={`${props.className} statisticsCarouselContainer`}>\n      <LeftOutlined\n        className=\"carouselArrow carouselArrowLeft\"\n        onClick={previous}\n      />\n      <Carousel ref={ref} className=\"statisticsCarousel\">\n        <div>\n          <div className=\"tabTitle\">\n            <FormattedMessage id=\"statistics.winRatio\" />\n          </div>\n          <Piegraph\n            key={countKey}\n            width={isMobile ? 200 : 500}\n            height={isMobile ? 240 : 600}\n            iconSize={isMobile ? 20 : 50}\n          />\n        </div>\n        <div>\n          <div className=\"tabTitle\">\n            <FormattedMessage id=\"statistics.movesPerGame\" />\n          </div>\n          <MovesGraph\n            key={countKey + 1}\n            width={isMobile ? 220 : 1000}\n            height={isMobile ? 150 : 500}\n          />\n        </div>\n        <div>\n          <div className=\"tabTitle\">\n            <FormattedMessage id=\"statistics.timePerGame\" />\n          </div>\n          <TimeGraph\n            key={countKey + 2}\n            width={isMobile ? 220 : 1000}\n            height={isMobile ? 150 : 500}\n          />\n        </div>\n      </Carousel>\n      <RightOutlined\n        className=\"carouselArrow carouselArrowRight\"\n        onClick={next}\n      />\n    </div>\n  );\n}\n\nexport default forwardRef(CarouselDisplay);\n","import { Col, Row } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport MovesGraph from \"../BarGraph/MovesGraph.component\";\nimport Piegraph from \"../PieGraph/PieGraph.component\";\nimport TimeGraph from \"../BarGraph/TimeGraph.component\";\n\nfunction DashboardDisplay() {\n  const [isMobile, setIsMobile] = useState(false);\n\n  const checkMobile = () => {\n    if (!isMobile && window.innerWidth < 767) {\n      setIsMobile(true);\n    }\n    if (isMobile && window.innerWidth >= 767) {\n      setIsMobile(false);\n    }\n  };\n  useEffect(checkMobile, []);\n\n  return (\n    <div className=\"statisticsDashboardContainer\">\n      <Row>\n        <div className=\"graphTitle\">\n          <FormattedMessage id=\"statistics.winRatio\" />\n        </div>\n        <Piegraph\n          width={isMobile ? 200 : 250}\n          height={isMobile ? 240 : 300}\n          iconSize={isMobile ? 20 : 50}\n          className=\"dashboardPieChart\"\n        />\n      </Row>\n      <Row className=\"bottomRow\">\n        <Col xs={24} sm={24} md={12}>\n          <div className=\"graphTitle\">\n            <FormattedMessage id=\"statistics.movesPerGame\" />\n          </div>\n          <MovesGraph\n            width={isMobile ? 200 : 500}\n            height={isMobile ? 100 : 250}\n            className=\"dashboardBarChart\"\n          />\n        </Col>\n        <Col xs={24} sm={24} md={12} className=\"secondCol\">\n          <div className=\"graphTitle\">\n            <FormattedMessage id=\"statistics.timePerGame\" />\n          </div>\n          <TimeGraph\n            width={isMobile ? 200 : 500}\n            height={isMobile ? 100 : 250}\n            className=\"dashboardBarChart\"\n          />\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default DashboardDisplay;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { FormattedMessage } from \"react-intl\";\nimport React from \"react\";\n\nfunction JoyrideSteps() {\n  return [\n    {\n      content: (\n        <h3>\n          <FormattedMessage id=\"joyride.statistics.step01\" />\n        </h3>\n      ),\n      disableBeacon: true,\n      spotlightClicks: false,\n      target: \".joyrideStatisticsPage\",\n      placement: \"center\" as const\n    },\n    {\n      content: (\n        <h3>\n          <FormattedMessage id=\"joyride.statistics.step02\" />\n        </h3>\n      ),\n      disableBeacon: true,\n      target: \".joyrideStatisticsCarousel\",\n      placement: \"bottom-end\"\n    },\n    {\n      content: (\n        <h3>\n          <FormattedMessage id=\"joyride.statistics.step03\" />\n        </h3>\n      ),\n      disableBeacon: true,\n      target: \".joyrideStatisticsCarousel\",\n      placement: \"bottom-end\"\n    },\n    {\n      content: (\n        <h3>\n          <FormattedMessage id=\"joyride.statistics.step04\" />\n        </h3>\n      ),\n      disableBeacon: true,\n      target: \".joyrideStatisticsCarousel\",\n      placement: \"bottom-end\"\n    },\n    {\n      content: (\n        <h3>\n          <FormattedMessage id=\"joyride.statistics.step05\" />\n        </h3>\n      ),\n      disableBeacon: true,\n      target: \".joyrideDashboardDisplay\"\n    }\n  ];\n}\n\nexport default JoyrideSteps;\n","import { AppstoreFilled, BorderOutlined } from \"@ant-design/icons\";\nimport React, { memo, useEffect, useRef, useState } from \"react\";\nimport CarouselDisplay from \"../../Components/Graphs/CarouselDisplay/CarouselDisplay.component\";\nimport DashboardDisplay from \"../../Components/Graphs/DashboardDisplay/DashboardDisplay.component\";\nimport { ExplicitAny } from \"../../../global\";\nimport { FormattedMessage } from \"react-intl\";\nimport JoyrideSteps from \"./JoyrideSteps.component\";\nimport PageTitle from \"../../Components/PageTitle/PageTitle.component\";\nimport joyrideActions from \"../../../redux/joyride/joyride.actions\";\nimport { useDispatch } from \"react-redux\";\n\nfunction StatisticsPage() {\n  const carouselRef: ExplicitAny = useRef();\n\n  const dispatch = useDispatch();\n  const [carouselDisplay, setCarouselDisplay] = useState<boolean>(true);\n\n  const handleCarousel = (action: string, index: number) => {\n    if (action === \"next\" && index >= 2 && index <= 3) {\n      carouselRef?.current?.innerSlider?.slickNext();\n    } else if (action === \"prev\" && index >= 2 && index <= 4) {\n      carouselRef?.current?.innerSlider?.slickPrev();\n    }\n  };\n\n  const initJoyride = () => {\n    dispatch(\n      joyrideActions.initJoyride(\"statistics\", JoyrideSteps(), handleCarousel)\n    );\n  };\n  useEffect(initJoyride, []);\n\n  return (\n    <div className=\"joyrideStatisticsPage mainPage statisticsPage\">\n      <PageTitle title={<FormattedMessage id=\"sidebar.statistics\" />} />\n      {carouselDisplay ? (\n        <>\n          <CarouselDisplay\n            ref={carouselRef}\n            className=\"joyrideStatisticsCarousel\"\n          />\n          <AppstoreFilled\n            className=\"joyrideDashboardDisplay toggleButton\"\n            onClick={() => setCarouselDisplay(false)}\n          />\n        </>\n      ) : (\n        <>\n          <DashboardDisplay />\n          <BorderOutlined\n            className=\"toggleButton\"\n            onClick={() => setCarouselDisplay(true)}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StatisticsPage);\n"],"sourceRoot":""}